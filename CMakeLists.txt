cmake_minimum_required(VERSION 3.21)
set(TARGET_NAME "logger")
set(PACKAGE_NAME sv-${TARGET_NAME})
set(EXPORT_NAME ${PACKAGE_NAME}-config)

project(${TARGET_NAME} LANGUAGES C CXX)

message("CMAKE_CXX_COMPILER: ${CMAKE_CXX_COMPILER}")
message("CMAKE_C_COMPILER: ${CMAKE_C_COMPILER}")
message("CMAKE_GENERATOR: ${CMAKE_GENERATOR}")

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED True)

if (WIN32)
  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin/${CMAKE_BUILD_TYPE}")
  set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib/${CMAKE_BUILD_TYPE}")
  set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib/${CMAKE_BUILD_TYPE}")
elseif (UNIX)
  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin/${CMAKE_BUILD_TYPE}")
  set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin/${CMAKE_BUILD_TYPE}")
  set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib/${CMAKE_BUILD_TYPE}")
endif()

if (CMAKE_VERSION VERSION_GREATER_EQUAL "3.30")
  find_package(boost_asio CONFIG REQUIRED)
else()
  find_package(Boost REQUIRED)
endif()

find_package(fmt CONFIG REQUIRED)

# build library
add_subdirectory(src)

add_subdirectory(test)
